{"version":3,"sources":["abi.js","components/Balance.jsx","components/ConnectedAccount.jsx","App.js","index.js"],"names":["AccountBalance","props","Table","striped","bordered","contractBal","accountBal","ConnectedAccount","robolink","account","img","src","height","alt","contractInstance","MOONBASE_ALPHA","OWNER","RESULT_UNKNOWN","DEPOSIT_AMOUNT","web3","Web3","givenProvider","console","log","version","App","radios","name","value","useState","setAccount","accountBalance","setAccountBalance","contractBalance","setContractBalance","betResult","setBetResult","connected","setConnected","statistics","setStatistics","betAmount","setBetAmount","Styles","styled","div","a","window","ethereum","enable","alert","eth","net","getNetworkType","network","getAccounts","accounts","getBalance","then","bal","utils","fromWei","Contract","abiJson","from","eventListener","getContractBalance","getPlayerData","methods","call","res","flipCoin","betHead","weiValue","toWei","send","gas","depositFunds","on","rec","err","transferedBalance","withdrawAll","events","playerRegistered","error","result","coinFlipResult","useEffect","loadBlockchainData","Container","fluid","Row","Col","Card","border","style","width","margin","Body","Title","Form","className","map","radio","index","Check","label","type","id","checked","onChange","e","currentTarget","Text","Button","onClick","Footer","plays","won","lost","Badge","href","Jumbotron","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e68bdb3b.chunk.js","sourcesContent":["export default {\n    address: \"0xA0886958c8aF74B99402Bba5dF520C8D14AeD0aE\",\n    abi: [\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": false,\n              \"internalType\": \"string\",\n              \"name\": \"messageToPlayer\",\n              \"type\": \"string\"\n            },\n            {\n              \"indexed\": false,\n              \"internalType\": \"address\",\n              \"name\": \"creator\",\n              \"type\": \"address\"\n            },\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"toTransfer\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"coinFlipResult\",\n          \"type\": \"event\"\n        },\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": false,\n              \"internalType\": \"address\",\n              \"name\": \"adr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"playerRegistered\",\n          \"type\": \"event\"\n        },\n        {\n          \"inputs\": [],\n          \"name\": \"balance\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"constant\": true\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"creators\",\n          \"outputs\": [\n            {\n              \"internalType\": \"address payable\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"constant\": true\n        },\n        {\n          \"inputs\": [],\n          \"name\": \"owner\",\n          \"outputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"constant\": true\n        },\n        {\n          \"inputs\": [],\n          \"name\": \"depositFunds\",\n          \"outputs\": [],\n          \"stateMutability\": \"payable\",\n          \"type\": \"function\",\n          \"payable\": true\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"betOnHead\",\n              \"type\": \"bool\"\n            }\n          ],\n          \"name\": \"flipCoin\",\n          \"outputs\": [],\n          \"stateMutability\": \"payable\",\n          \"type\": \"function\",\n          \"payable\": true\n        },\n        {\n          \"inputs\": [],\n          \"name\": \"getPlayerData\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"won\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"lost\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"plays\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"constant\": true\n        },\n        {\n          \"inputs\": [],\n          \"name\": \"getContractBalance\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"constant\": true\n        },\n        {\n          \"inputs\": [],\n          \"name\": \"withdrawAll\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }\n      ]\n}","import React from 'react'\nimport { Table } from 'react-bootstrap'\n\nexport default function AccountBalance(props) {\n  return (\n    <Table striped bordered >\n      <thead>\n        <tr>\n          <th>Contract Balance</th>\n          <th>Your Balance</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>{props.contractBal}</td>\n          <td>{props.accountBal}</td>\n        </tr>\n      </tbody>\n    </Table>\n  )\n}\n","import React from 'react'\n\nexport default function ConnectedAccount(props) {\n  const robolink = 'https://robohash.org/' + props.account\n  return (\n    < >\n      <h6 >\n        Connected account: {props.account}\n      </h6>\n      <img img src={robolink} height=\"120\" alt=\"RoboHash\" />\n      </>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport Web3 from 'web3'\nimport abiJson from './abi';\nimport { Button, Container, Row, Card, Col, Form, Badge, Jumbotron } from 'react-bootstrap';\nimport Balance from './components/Balance'\nimport ConnectedAccount from './components/ConnectedAccount'\nimport styled from 'styled-components';\n\nconst MOONBASE_ALPHA = 'https://rpc.testnet.moonbeam.network'\nconst OWNER = \"0x8F10433FC11b70a15128aAF0b30B906627808296\"\nconst RESULT_UNKNOWN = 'result ❔'\nconst RESULT_WON = 'You won 👍'\nconst RESULT_LOST = 'You lost 👎'\nconst DEPOSIT_AMOUNT = '1000' //milli\n\nvar contractInstance;\n\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:9933\")\nconsole.log(\"web3 version = \" + web3.version);\n\n\nfunction App() {\n  const radios = [\n    { name: \"0.01 DEV\", value: \"10\" },\n    { name: \"0.02 DEV\", value: \"20\" },\n    { name: \"0.05 DEV\", value: \"50\" },\n    { name: \"0.1 DEV\", value: \"100\" },\n  ];\n  const [account, setAccount] = useState('')\n  const [accountBalance, setAccountBalance] = useState(0)\n  const [contractBalance, setContractBalance] = useState(0)\n  const [betResult, setBetResult] = useState(RESULT_UNKNOWN)\n  const [connected, setConnected] = useState(false)\n  const [statistics, setStatistics] = useState({})\n  const [betAmount, setBetAmount] = useState(radios[0].value)\n  const Styles = styled.div`\n  .jumbo {\n    background: \n    linear-gradient(\n      rgb(29, 37, 82), \n      rgb(83, 203, 200)\n    );\n  }\n`;\n\n  async function loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(MOONBASE_ALPHA)\n      await window.ethereum.enable()\n      setConnected(true)\n      console.log(\"connected \", connected)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async function loadBlockchainData() {\n\n    const network = await web3.eth.net.getNetworkType()\n    console.log(network)\n\n    console.log(\"load connected \", connected)\n\n    const accounts = await web3.eth.getAccounts()\n    console.log(\"accounts\", accounts)\n    setAccount(accounts[0])\n    console.log(\"accounts[0]=\", accounts[0])\n\n    if (accounts[0]) {\n      web3.eth.getBalance(accounts[0]).then(bal => {\n        setAccountBalance(web3.utils.fromWei(bal, 'ether'))\n      })\n    }\n    console.log(\"Balance in ETH\", accountBalance)\n    if (!contractInstance) {\n      contractInstance = new web3.eth.Contract(abiJson.abi, abiJson.address, { from: accounts[0] });\n      console.log(\"new contractInstance\", contractInstance)\n    }\n    else console.log(\"existing contractInstance\", contractInstance)\n    eventListener()\n    getContractBalance()\n    getPlayerData()\n    setBetResult(RESULT_UNKNOWN)\n  }\n\n  async function getPlayerData() {\n    console.log(\"Refresh statistics\");\n    contractInstance.methods.getPlayerData().call()\n      .then((res) => {\n        console.log(\"statistics\", res);\n        setStatistics(res)\n      });\n  }\n\n  async function getContractBalance() {\n    console.log(\"get Contract Balance\")\n    contractInstance.methods.getContractBalance().call()\n      .then((res) => {\n        console.log(\"getContractBalance\", res)\n        setContractBalance(web3.utils.fromWei(res, 'ether'))\n      });\n  }\n\n  async function flipCoin(betHead) {\n    console.log(\"flipCoin\", account, betHead);\n    setBetResult('waiting blockchain result... 🐌')\n    var weiValue = web3.utils.toWei(betAmount, 'milli');\n    contractInstance.methods.flipCoin(betHead).send({ from: account, gas: 3000000, value: weiValue })\n      .then((res) => {\n        console.log(\"flipCoin\", res);\n      });\n  }\n\n  async function deposit() {\n    console.log(\"deposit\", DEPOSIT_AMOUNT);\n    var weiValue = web3.utils.toWei(DEPOSIT_AMOUNT, 'milli');\n    contractInstance.methods.depositFunds().send({ OWNER, gas: 3000000, value: weiValue })\n      .on('receipt', function (rec) {\n\n        console.log(\"deposit receipt\", rec);\n      })\n      .on('error', function (err) {\n        console.log(\"deposit err\", err);\n      });\n  }\n\n  async function withdrawAll() {\n    console.log(\"withdrawAll\");\n    var transferedBalance = contractInstance.methods.withdrawAll().call()\n      .on('receipt', (rec) => {\n        console.log(\"transferedBalance\", transferedBalance);\n        console.log(\"withdrawAll receipt\", rec);\n      })\n      .on('error', (err) => {\n        console.log(\"withdrawAll err\", err);\n      });\n  }\n\n  function eventListener() {\n    console.log(\"set event listeners\");\n    contractInstance.events.playerRegistered(function (error, result) {\n      console.log(\"Recieved Event playerRegistered\");\n      if (!error) {\n        console.log(\"Player \" + result[\"returnValues\"][0] + \" is registered with contract\");\n      }\n      else {\n        console.log(\"error in playerRegistered\");\n        console.log(error);\n      }\n    });\n\n    contractInstance.events.coinFlipResult(function (error, result) {\n      console.log(\"Recieved Event coinFlipResult\");\n      if (!error) {\n        console.log(\"flip result\", result);\n        if (result[\"returnValues\"][2] > 0) {\n          setBetResult(RESULT_WON)\n          console.log(\"You won!!!!!\");\n        }\n        else {\n          setBetResult(RESULT_LOST)\n          console.log(\"You lost :(\");\n        }\n        getPlayerData()\n      }\n      else {\n        setBetResult(\"error in coinFlipResult\")\n        console.log(\"error in coinFlipResult\");\n        console.log(error);\n      }\n    });\n  }\n\n  useEffect(() => {\n    loadBlockchainData()\n  }, [connected, accountBalance])\n\n  if (!connected) {\n    return (\n      <Styles>\n        <Jumbotron fluid className=\"jumbo\">\n          <Container>\n            <h1>Coin Flip on Moonbase</h1>\n         <p>This is a simple gambling dApp deployed on the Moonbase Alpha testnet.\n         In order to connect to this app you will need Metamask or similar wallet.</p>\n            <p>\n              <p></p>\n              <Button onClick={loadWeb3} >Connect to Moonbase Alpha</Button>\n            </p>\n          </Container>\n        </Jumbotron>\n      </Styles>\n    )\n  }\n  else {\n    return (\n      <Container fluid='md'>\n        <Row >\n          <Col>\n            logo\n          </Col>\n          <Col>\n            <ConnectedAccount account={account} />\n          </Col>\n        </Row>\n        <Row>\n          <Balance contractBal={contractBalance} accountBal={accountBalance} />\n        </Row>\n        <Row>\n          <Card border=\"info\" style={{ width: '18rem', margin: 5 }}>\n            <Card.Body>\n              <Card.Title> 1. Pick your bet amount </Card.Title>\n              <Form>\n                <div className=\"mb-3\">\n                  {radios.map((radio, index) => (\n                    <Form.Check name='radios'\n                      label={radio.name}\n                      type='radio'\n                      id={radio.name}\n                      value={radio.value}\n                      checked={betAmount === radio.value}\n                      onChange={e => setBetAmount(e.currentTarget.value)} />\n                  ))}\n                </div>\n              </Form>\n            </Card.Body>\n          </Card>\n          <Card border=\"info\" style={{ width: '18rem', margin: 5 }}>\n            <Card.Body>\n              <Card.Title> 2. Press button to place your bet </Card.Title>\n              <Card.Text>\n                <Button onClick={() => flipCoin(true)}>Head</Button>{' '}\n                <Button onClick={() => flipCoin(false)}>Tail</Button>\n              </Card.Text>\n              <Card.Footer>\n                <h5>{betResult}</h5>\n              </Card.Footer>\n            </Card.Body>\n          </Card>\n          <Card border=\"info\" style={{ width: '18rem', margin: 5 }}>\n            <Card.Body>\n              <Card.Title> 3. Account statistics</Card.Title>\n              <Card.Text>Plays:{statistics.plays} </Card.Text>\n              <Card.Text>Won:  {statistics.won} </Card.Text>\n              <Card.Text>Lost: {statistics.lost} </Card.Text>\n            </Card.Body>\n          </Card>\n        </Row>\n        <Row>\n          <Badge>\n            Contract address on\n            <a href=\"https://docs.moonbeam.network/networks/testnet/\">Moonbase Alpha:</a> {abiJson.address}\n          </Badge>\n        </Row>\n        {(account === OWNER) ? (\n          <Row>\n            <Button onClick={deposit} >Deposit</Button>\n            <Button onClick={withdrawAll} >withdrawAll</Button>\n          </Row>\n        ) : null}\n      </Container>\n    )\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootswatch/dist/superhero/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}