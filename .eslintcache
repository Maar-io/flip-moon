[{"/Volumes/Data2TB/projects/flip-moon/src/index.js":"1","/Volumes/Data2TB/projects/flip-moon/src/App.js":"2","/Volumes/Data2TB/projects/flip-moon/src/abi.js":"3","/Volumes/Data2TB/projects/flip-moon/src/components/ContractBalance.jsx":"4","/Volumes/Data2TB/projects/flip-moon/src/components/ConnectedAccount.jsx":"5","/Volumes/Data2TB/projects/flip-moon/src/components/Balance.jsx":"6"},{"size":273,"mtime":1609520029000,"results":"7","hashOfConfig":"8"},{"size":5199,"mtime":1609531464000,"results":"9","hashOfConfig":"8"},{"size":3999,"mtime":1609517964000,"results":"10","hashOfConfig":"8"},{"size":170,"mtime":1609530692000,"results":"11","hashOfConfig":"8"},{"size":183,"mtime":1609530583000,"results":"12","hashOfConfig":"8"},{"size":437,"mtime":1609531620000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"kqv0cv",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Volumes/Data2TB/projects/flip-moon/src/index.js",[],["30","31"],"/Volumes/Data2TB/projects/flip-moon/src/App.js",["32"],"import { useState, useEffect } from 'react'\nimport Web3 from 'web3'\nimport abiJson from './abi';\nimport { Button, Container, Row } from 'react-bootstrap';\nimport Balance from './components/Balance'\nimport ConnectedAccount from './components/ConnectedAccount'\n\nconst MOONBASE_ALPHA = 'https://rpc.testnet.moonbeam.network'\nconst OWNER = \"0x8F10433FC11b70a15128aAF0b30B906627808296\"\nvar contractInstance;\n\nconst web3 = new Web3(Web3.givenProvider || \"http://localhost:9933\")\nconsole.log(\"web3 version = \" + web3.version);\n\n\nfunction App() {\n  const [account, setAccount] = useState('')\n  const [accountBalance, setAccountBalance] = useState(0)\n  const [contractBalance, setContractBalance] = useState(0)\n\n  const [connected, setConnected] = useState(false)\n\n  async function loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(MOONBASE_ALPHA)\n      await window.ethereum.enable()\n      setConnected(true)\n      console.log(\"connected \", connected)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async function loadBlockchainData() {\n\n    const network = await web3.eth.net.getNetworkType()\n    console.log(network)\n\n    console.log(\"load connected \", connected)\n\n    const accounts = await web3.eth.getAccounts()\n    console.log(\"accounts\", accounts)\n    setAccount(accounts[0])\n    console.log(\"accounts[0]=\", accounts[0])\n\n    if (accounts[0]) {\n      web3.eth.getBalance(accounts[0]).then(bal => {\n        setAccountBalance(web3.utils.fromWei(bal, 'ether'))\n      })\n    }\n    console.log(\"Balance in ETH\", accountBalance)\n    if (!contractInstance) {\n      contractInstance = new web3.eth.Contract(abiJson.abi, abiJson.address, { from: accounts[0] });\n      console.log(\"new contractInstance\", contractInstance)\n    }\n    else console.log(\"existing contractInstance\", contractInstance)\n    eventListener()\n    getContractBalance()\n  }\n\n  async function getPlayerData() {\n    console.log(\"Refresh statistics\");\n    contractInstance.methods.getPlayerData().call()\n      .then((res) => {\n        console.log(\"statistics\", res);\n      });\n  }\n\n  async function getContractBalance() {\n    console.log(\"get Contract Balance\")\n    contractInstance.methods.getContractBalance().call()\n      .then((res) => {\n        console.log(\"getContractBalance\", res)\n        setContractBalance(res)\n      });\n  }\n\n  async function flipCoin(betHead) {\n    console.log(\"flipCoin\", account, betHead);\n    var weiValue = web3.utils.toWei('10', 'milli');\n    contractInstance.methods.flipCoin(betHead).send({ from: account, gas: 3000000, value: weiValue })\n      .then((res) => {\n        console.log(\"flipCoin\", res);\n      });\n  }\n\n  async function deposit() {\n    console.log(\"deposit\");\n    var weiValue = web3.utils.toWei('100', 'milli');\n    contractInstance.methods.depositFunds().send({ OWNER, gas: 3000000, value: weiValue })\n      .on('receipt', function (rec) {\n\n        console.log(\"deposit receipt\", rec);\n      })\n      .on('error', function (err) {\n        console.log(\"deposit err\", err);\n      });\n  }\n\n  async function withdrawAll() {\n    console.log(\"withdrawAll\");\n    var transferedBalance = contractInstance.methods.withdrawAll().call()\n      .on('receipt', (rec) => {\n        console.log(\"transferedBalance\", transferedBalance);\n        console.log(\"withdrawAll receipt\", rec);\n      })\n      .on('error', (err) => {\n        console.log(\"withdrawAll err\", err);\n      });\n  }\n\n  function eventListener() {\n    console.log(\"set event listeners\");\n    contractInstance.events.playerRegistered(function (error, result) {\n      console.log(\"Recieved Event playerRegistered\");\n      if (!error) {\n        console.log(\"Player \" + result[\"returnValues\"][0] + \" is registered with contract\");\n      }\n      else {\n        console.log(\"error in playerRegistered\");\n        console.log(error);\n      }\n    });\n\n    contractInstance.events.coinFlipResult(function (error, result) {\n      console.log(\"Recieved Event coinFlipResult\");\n      if (!error) {\n        console.log(\"flip result\", result);\n        if (result[\"returnValues\"][2] > 0) {\n          console.log(\"You won!!!!!\");\n        }\n        else {\n          console.log(\"You lost :(\");\n        }\n      }\n      else {\n        console.log(\"error in coinFlipResult\");\n        console.log(error);\n      }\n    });\n  }\n\n  useEffect(() => {\n    loadBlockchainData()\n  }, [connected, accountBalance])\n\n  if (!connected) {\n    return (\n      <Container fluid='true'>\n        <Row>\n          <Button  onClick={loadWeb3} >Connect to Moon-flip</Button>\n        </Row>\n      </Container>\n\n    )\n  }\n  else {\n    return (\n      <>\n        <ConnectedAccount account={account} />\n        <Balance contractBal={contractBalance} accountBal={accountBalance} />\n        {/* <Button onClick={getContractBalance} >ContractBalance</Button> */}\n        <Button onClick={getPlayerData} >getPlayerData</Button>\n        <Button onClick={deposit} >Deposit</Button>\n        <Button onClick={withdrawAll} >withdrawAll</Button>\n        <Button onClick={() => flipCoin(true)}>Head</Button>\n        <Button onClick={() => flipCoin(false)}>Tail</Button>\n      </>\n    )\n  }\n}\nexport default App;\n","/Volumes/Data2TB/projects/flip-moon/src/abi.js",["33"],"export default {\n    address: \"0xA0886958c8aF74B99402Bba5dF520C8D14AeD0aE\",\n    abi: [\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": false,\n              \"internalType\": \"string\",\n              \"name\": \"messageToPlayer\",\n              \"type\": \"string\"\n            },\n            {\n              \"indexed\": false,\n              \"internalType\": \"address\",\n              \"name\": \"creator\",\n              \"type\": \"address\"\n            },\n            {\n              \"indexed\": false,\n              \"internalType\": \"uint256\",\n              \"name\": \"toTransfer\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"coinFlipResult\",\n          \"type\": \"event\"\n        },\n        {\n          \"anonymous\": false,\n          \"inputs\": [\n            {\n              \"indexed\": false,\n              \"internalType\": \"address\",\n              \"name\": \"adr\",\n              \"type\": \"address\"\n            }\n          ],\n          \"name\": \"playerRegistered\",\n          \"type\": \"event\"\n        },\n        {\n          \"inputs\": [],\n          \"name\": \"balance\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"constant\": true\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"name\": \"creators\",\n          \"outputs\": [\n            {\n              \"internalType\": \"address payable\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"constant\": true\n        },\n        {\n          \"inputs\": [],\n          \"name\": \"owner\",\n          \"outputs\": [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"\",\n              \"type\": \"address\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"constant\": true\n        },\n        {\n          \"inputs\": [],\n          \"name\": \"depositFunds\",\n          \"outputs\": [],\n          \"stateMutability\": \"payable\",\n          \"type\": \"function\",\n          \"payable\": true\n        },\n        {\n          \"inputs\": [\n            {\n              \"internalType\": \"bool\",\n              \"name\": \"betOnHead\",\n              \"type\": \"bool\"\n            }\n          ],\n          \"name\": \"flipCoin\",\n          \"outputs\": [],\n          \"stateMutability\": \"payable\",\n          \"type\": \"function\",\n          \"payable\": true\n        },\n        {\n          \"inputs\": [],\n          \"name\": \"getPlayerData\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"won\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"lost\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"plays\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"constant\": true\n        },\n        {\n          \"inputs\": [],\n          \"name\": \"getContractBalance\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"view\",\n          \"type\": \"function\",\n          \"constant\": true\n        },\n        {\n          \"inputs\": [],\n          \"name\": \"withdrawAll\",\n          \"outputs\": [\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"\",\n              \"type\": \"uint256\"\n            }\n          ],\n          \"stateMutability\": \"nonpayable\",\n          \"type\": \"function\"\n        }\n      ]\n}","/Volumes/Data2TB/projects/flip-moon/src/components/ContractBalance.jsx",[],["34","35"],"/Volumes/Data2TB/projects/flip-moon/src/components/ConnectedAccount.jsx",[],"/Volumes/Data2TB/projects/flip-moon/src/components/Balance.jsx",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":146,"column":6,"nodeType":"42","endLine":146,"endColumn":33,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":1,"nodeType":"46","endLine":164,"endColumn":2},{"ruleId":"36","replacedBy":"47"},{"ruleId":"38","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadBlockchainData'. Either include it or remove the dependency array.","ArrayExpression",["51"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["49"],["50"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [connected, accountBalance, loadBlockchainData]",{"range":"54","text":"55"},[4401,4428],"[connected, accountBalance, loadBlockchainData]"]